{"version":3,"sources":["components/ButtonSearchWheater.js","components/CurrentWheater.js","components/City.js","components/App.js","index.js"],"names":["ButtonSearch","props","onClick","click","className","aria-hidden","CurrentWheater","Math","floor","data","sunrise","description","City","city","charAt","slice","country","api","App","state","handleInputChange","e","setState","value","target","handleDataFatch","event","wheater","fetch","then","response","ok","Error","status","json","result","main","temp","name","sys","weather","icon","catch","error","console","log","this","startDate","Date","toUTCString","onChange","placeholder","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAWeA,G,kBAPM,SAACC,GAClB,OACI,4BAAQC,QAASD,EAAME,OACnB,uBAAGC,UAAU,eAAeC,cAAY,YCOrCC,EAZQ,SAACL,GACpB,OACI,oCACI,yBAAKG,UAAU,eACX,uBAAGA,UAAU,QAAb,UAAwBG,KAAKC,MAAMP,EAAMQ,MAAzC,WAEJ,yBAAKL,UAAU,WAAf,WAAkCH,EAAMS,SACxC,6BAAMT,EAAMU,eCKTC,G,MAXF,SAACX,GACV,IAAMY,EAAOZ,EAAMY,KAAKC,OAAO,GAAKb,EAAMY,KAAKE,MAAM,GAE/CC,EAAUf,EAAMe,QAAQF,OAAO,GAAKb,EAAMe,QAAQD,MAAM,GAC9D,OACI,yBAAKX,UAAU,gBACX,uBAAGA,UAAU,YAAYS,EAAzB,KAAiCG,MCHvCC,EACC,mCADDA,EAEE,2CAuEOC,E,4MAnEbC,MAAQ,CACNV,KAAM,M,EAGRW,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOD,S,EAIpBE,gBAAkB,SAACC,GAEjB,IAAMC,EAAU,EAAKR,MAAMI,MAC3BK,MAAM,GAAD,OAAIX,EAAJ,qBAAyBU,EAAzB,+BAAuDV,IACzDY,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAMF,EAASG,WAEtBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASI,UAC1BL,MAAK,SAAAM,GACJ,EAAKb,SAAS,CACZb,KAAM0B,EAAOC,KAAKC,KAClBxB,KAAMsB,EAAOG,KACb5B,QAASyB,EAAOI,IAAI7B,QACpBM,QAASmB,EAAOI,IAAIvB,QACpBL,YAAawB,EAAOK,QAAQC,UAG/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,uDAKtB,IAAD,EAE+CG,KAAK3B,MAAnDV,EAFD,EAECA,KAAMI,EAFP,EAEOA,KAAMG,EAFb,EAEaA,QAASN,EAFtB,EAEsBA,QAASC,EAF/B,EAE+BA,YAGlCoC,EAAY,IAAIC,KAAKtC,GAASuC,cAAclC,MAAM,GAAI,IAE1D,OACE,yBAAKX,UAAU,OACb,8BACE,sEACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,2BACEA,UAAU,aACV8C,SAAUJ,KAAK1B,kBACf+B,YAAY,YACZC,KAAK,SAGP,kBAAC,EAAD,CAAqBjD,MAAO2C,KAAKrB,mBAElChB,EAAO,kBAAC,EAAD,CAAMI,KAAMA,EAAMG,QAASA,IAAcP,EAChDA,EAAO,kBAAC,EAAD,CAAgBC,QAASqC,EAAWtC,KAAMA,EAAME,YAAaA,IAAkBF,S,GA3DjF4C,aCLlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6df8817f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ButtonSearchWheater.css';\n\nimport FontAwesome from 'react-fontawesome'\nconst ButtonSearch = (props) => {\n    return (\n        <button onClick={props.click}>\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n        </button>\n    );\n}\nexport default ButtonSearch;","import React, { Component } from 'react';\n\nconst CurrentWheater = (props) => {\n    return (\n        <>\n            <div className=\"wheater-box\">\n                <p className=\"temp\">{`${Math.floor(props.data)}Â°C`}</p>\n            </div>\n            <div className=\"sunrise\">Sunrise {props.sunrise}</div>\n            <div>{props.description}</div>\n        </>\n    );\n}\n\nexport default CurrentWheater;","import React, { Component } from 'react';\nimport { string } from 'postcss-selector-parser';\n\nconst City = (props) => {\n    const city = props.city.charAt(0) + props.city.slice(1)\n        ;\n    const country = props.country.charAt(0) + props.country.slice(1)\n    return (\n        <div className=\"location-box\">\n            <p className=\"location\">{city}, {country}</p>\n        </div>\n    );\n}\n\nexport default City;","import React, { Component } from 'react';\nimport './App.css';\nimport ButtonSearchWheater from './ButtonSearchWheater';\nimport CurrentWheater from './CurrentWheater';\nimport City from './City';\n\nconst api = {\n  key: \"28c13d4f349b2d5b41c172e81e41e4a1\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nclass App extends Component {\n  state = {\n    data: null,\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    })\n  }\n\n  handleDataFatch = (event) => {\n    // if (event.key === 'Enter' || this.handleDataFatch) {\n    const wheater = this.state.value;\n    fetch(`${api.base}weather?q=${wheater}&units=metric&APPID=${api.key}`)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status)\n      })\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          data: result.main.temp,\n          city: result.name,\n          sunrise: result.sys.sunrise,\n          country: result.sys.country,\n          description: result.weather.icon,\n        })\n      })\n      .catch(error => console.log(error))\n  }\n\n\n\n  render() {\n\n    const { data, city, country, sunrise, description } = this.state\n\n    // let startDate = new Date(sunrise).toUTCString().slice(16, 22);\n    let startDate = new Date(sunrise).toUTCString().slice(16, 22);\n\n    return (\n      <div className=\"app\">\n        <main>\n          <h2>Enter city name to see current weather</h2>\n          <div className=\"search-box\">\n            <div className=\"main-wrapper\">\n              <input\n                className=\"search-bar\"\n                onChange={this.handleInputChange}\n                placeholder=\"search...\"\n                type=\"text\"\n              />\n\n              <ButtonSearchWheater click={this.handleDataFatch} />\n            </div>\n            {data ? <City city={city} country={country} /> : data}\n            {data ? <CurrentWheater sunrise={startDate} data={data} description={description} /> : data}\n\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}